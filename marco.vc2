*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="marco.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS aplicacion AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: contoolbar
		*m: iniciar
		*m: leerini
		*m: nombrepuesto
		*m: nombreusuario
		*m: seteos
		*m: sintoolbar
		*m: terminar
		*p: aplicacionid
		*p: cantform
		*p: canttool
		*p: cnompuesto
		*p: cnomrecurso
		*p: cnomserver
		*p: cnomusuario
		*p: crutagraficos
		*p: crutatrabajo
		*p: datosadministracion
		*p: datoscontabilidad
		*p: datosprestacion
		*p: empresaid
		*p: menuinicio
		*p: obarra
		*p: otemporizador
		*p: ousuario
		*p: rutaacceso
		*p: rutaadministracion
		*p: rutacontabilidad
		*p: rutadatos
		*p: rutaprestacion
		*p: rutatemporal
		*a: atoolbars[1,2]
	*</DefinedPropArrayMethod>

	*<PropValue>
		aplicacionid = 
		cantform = 0
		canttool = 0
		cnompuesto = ""
		cnomrecurso = ""
		cnomserver = ""
		cnomusuario = ""
		crutagraficos = ""
		crutatrabajo = ""
		datosadministracion = 
		datoscontabilidad = 
		datosprestacion = 
		empresaid = 
		menuinicio = ""
		Name = "aplicacion"
		obarra = 
		otemporizador = 
		rutaacceso = 
		rutaadministracion = 
		rutacontabilidad = 
		rutadatos = 
		rutaprestacion = 
		rutatemporal = 
	*</PropValue>
	
	PROCEDURE contoolbar
		Local nIndince
		
		*-- Mostrar todas las barras de herramientas de VFP que estaban ocultas previamente
		For nIndince = 1 To Alen(This.aToolBars, 1)
		  If This.aToolBars[nIndince,2]
		    Show Window (This.aToolBars[nIndince,1])
		  EndIf
		EndFor
		
	ENDPROC

	PROCEDURE Destroy
		*!*	this.contoolbar()
		set sysmenu to default
		on shutdown
		
	ENDPROC

	PROCEDURE iniciar
		Local lIngresoHabilitado
		use mensaje noupdate shared
		lIngresoHabilitado = !activo
		use
		if !lIngresoHabilitado
			do form SistIngr
		endif
		do (this.MenuInicio+".mpr")
		read events
		
	ENDPROC

	PROCEDURE Init
		lparameters lMenuInicio, lArchivoIni, lNombreAplicacion
		
		*!*	_Screen.Top=0
		*!*	_Screen.Left=0
		*!*	_Screen.Width=Sysmetric(1)
		*!*	_Screen.Height=Sysmetric(2)*.85
		*!*	__Screen.Left=Sysmetric(2)*.01
		*!*	_Screen.Height=Sysmetric(2)*.75
		*!*	_Screen.Width=Sysmetric(1)*.97
		*!*	Screen.Top=Sysmetric(2)*.01
		
		
		if type("lMenuInicio")="C" and !empty(lMenuInicio)
			this.MenuInicio = lMenuInicio
		endif
		this.AplicacionID = iif(type("lNombreAplicacion")="C" and !empty(lNombreAplicacion),lNombreAplicacion,this.AplicacionID)
		this.seteos()
		&&this.oUsuario = createobject("usuario")
		this.oTemporizador = createobject("temporizador")
		*!* Inicializar Propiedades
		this.rutaAcceso = ""
		this.rutaDatos = ""
		this.rutaContabilidad = ""
		this.rutaPrestacion = ""
		this.rutaAdministracion = ""
		this.datosContabilidad = ""
		this.datosPrestacion = ""
		this.datosAdministracion = ""
		*!*	this.sintoolbar()
		local cRutaIconos
		if type("lArchivoIni")="C" and !empty(lArchivoIni)
			this.LeerIni(lArchivoIni)
			cRutaIconos = "\\" + this.cNomServer + "\" + this.cNomRecurso + "\" + this.cRutaTrabajo + "\" + this.cRutaGraficos + "\"
		else
			cRutaIconos = "sistema"
		endif
		this.oBarra = createobject("Barra",cRutaIconos)
		&&this.cNomPuesto = upper(this.NombrePuesto())
		&&this.cNomUsuario = upper(this.NombreUsuario())
		this.rutaTemporal = GETENV("TEMP")
		this.rutaTemporal = IIF(EMPTY(this.rutaTemporal),"C:\",this.rutaTemporal)
		
	ENDPROC

	PROCEDURE leerini
		lparameters cNomArch
		local nCanalArc, cTxtSeccion, cLineaArc, cAccesoDatos
		this.rutaacceso = ""
		if file(cNomArch)
			nCanalArc = fopen(cNomArch)
			cTxtSeccion = ""
			do while !feof(nCanalArc)
				cLineaArc = fgets(nCanalArc)
				if empty(cLineaArc)
					loop
				endif
				if left(cLineaArc,1)="[" and right(cLineaArc,1)="]"
					cTxtSeccion = cLineaArc
				else
					if upper(cTxtSeccion) = "[RED]"
						do case
						case at("=",cLineaArc)<1
						case upper(substr(cLineaArc,1,at("=",cLineaArc)-1)) = "SERVER"
							this.cNomServer = alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
						case upper(substr(cLineaArc,1,at("=",cLineaArc)-1)) = "RECURSO"
							this.cNomRecurso = alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
						case upper(substr(cLineaArc,1,at("=",cLineaArc)-1)) = "TRABAJO"
							this.cRutaTrabajo = alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
						endcase
					endif
					if upper(cTxtSeccion) = "[ACCESOS]"
						do case
						case at("=",cLineaArc)<1
						case at("=",cLineaArc)>0 AND at("=",cLineaArc)<len(cLineaArc)
							cAccesoDatos = iif(empty(set("path")),"",set("path")+";")
							cAccesoID = upper(alltrim(left(cLineaArc,at("=",cLineaArc)-1)))
							do case
							case cAccesoID = "BASES"
								this.rutaDatos = "\\"+this.cNomServer+"\"+this.cNomRecurso+"\"+alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
							endcase
							cAccesoDatos = cAccesoDatos + "\\"+this.cNomServer+"\"+this.cNomRecurso+"\"+alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
							this.rutaacceso = this.rutaacceso + iif(empty(this.rutaacceso),"",";") + "\\"+this.cNomServer+"\"+this.cNomRecurso+"\"+alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
							set path to (cAccesoDatos) && additive
						endcase
					endif
					if upper(cTxtSeccion) = "[ARCHIVOS]"
						do case
						case at("=",cLineaArc)<1
						case upper(substr(cLineaArc,1,at("=",cLineaArc)-1)) = "GRAFICOS"
							this.cRutaGraficos = alltrim(substr(cLineaArc,at("=",cLineaArc)+1))
						endcase
					endif
				endif
			enddo
			fclose(nCanalArc)
		endif
		
	ENDPROC

	PROCEDURE nombrepuesto
		*---------------------------------
		* FUNCTION NombrePuesto()
		*---------------------------------
		* Retorna el nombre de la computadora
		* USO: ? NombrePuesto() -> "PC_DESARROLLO"
		*---------------------------------
		LOCAL lcComputer, lnSize
		lcComputer = SPACE(80)
		lnSize = 80
		DECLARE INTEGER GetComputerName IN WIN32API ;
			STRING @cComputerName, ;
			INTEGER @nSize
		=GetComputername(@lcComputer, @lnSize)
		IF lnSize < 2
			lcComputer = ""
		ELSE
			lcComputer = SUBSTR(lcComputer, 1, lnSize)
		ENDIF
		this.cNomPuesto = lcComputer
		RETURN lcComputer
		
	ENDPROC

	PROCEDURE nombreusuario
		*---------------------------------
		* FUNCTION NombreUsuario()
		*---------------------------------
		* Retorna el nombre del usuario
		* USO: ? NombreUsuario() -> "JUAN"
		*---------------------------------
		LOCAL lcUser, lnSize
		lcUser = SPACE(80)
		lnSize = 80
		DECLARE INTEGER GetUserName IN WIN32API ;
			STRING @cUserName, ;
			INTEGER @nSize
		=GetUserName(@lcUser, @lnSize)
		IF lnSize < 2
			lcUser = ""
		ELSE
			lcUser = SUBSTR(lcUser, 1, lnSize-1)
		ENDIF
		this.cNomusuario = lcUser
		RETURN lcUser
		
	ENDPROC

	PROCEDURE seteos
		*-- Sets del Sistema
		&&InsMode(.T.)
		&&CapsLock(.T.)
		&&NumLock(.T.)
		
		Set Century To 19 RollOver 90
		Set Bell Off
		Set BrStatus Off
		Set Century On
		Set Clock Status
		Set Confirm Off
		Set CpDialog Off
		Set Date French
		Set Decimal To 2
		Set Deleted On
		Set Delimiters Off
		Set Escape Off
		Set Exact Off
		Set Exclusive Off
		Set Fixed On
		Set Hours To 24
		Set MemoWidth To 80
		Set MultiLocks On
		Set Notify Off
		Set Reprocess To 0
		Set Safety Off
		Set Scoreboard Off
		Set Status Off
		Set Status Bar Off
		Set Talk Off
		
		
	ENDPROC

	PROCEDURE sintoolbar
		*-- Nombres de barra de herramientas de Visual FoxPro en castellano
		#DEFINE TB_FORMDESIGNER_E      "Generador de formularios"
		#DEFINE TB_STANDARD_E          "Estándar"
		#DEFINE TB_LAYOUT_E            "Distribución"
		#DEFINE TB_QUERY_E             "Generador de consultas"
		#DEFINE TB_VIEWDESIGNER_E      "Generador de vistas"
		#DEFINE TB_COLORPALETTE_E      "Paleta de colores"
		#DEFINE TB_FORMCONTROLS_E      "Controles de formularios"
		#DEFINE TB_DATADESIGNER_E      "Generador de bases de datos"
		#DEFINE TB_REPODESIGNER_E      "Generador de informes"
		#DEFINE TB_REPOCONTROLS_E      "Controles de informes"
		#DEFINE TB_PRINTPREVIEW_E      "Presentaci¢n preliminar"
		
		*-- Nombres de barra de herramientas de Visual FoxPro en ingles
		#DEFINE TB_FORMDESIGNER_I      "FORMDESIGNER"
		#DEFINE TB_STANDARD_I          "STANDARD"
		#DEFINE TB_LAYOUT_I            "LAYOUT"
		#DEFINE TB_QUERY_I             "QUERY"
		#DEFINE TB_VIEWDESIGNER_I      "VIEWDESIGNER"
		#DEFINE TB_COLORPALETTE_I      "COLORPALETTE"
		#DEFINE TB_FORMCONTROLS_I      "FORMCONTROLS"
		#DEFINE TB_DATADESIGNER_I      "DATADESIGNER"
		#DEFINE TB_REPODESIGNER_I      "REPODESIGNER"
		#DEFINE TB_REPOCONTROLS_I      "REPOCONTROLS"
		#DEFINE TB_PRINTPREVIEW_I      "PRINTPREVIEW"
		
		*-- Libera todas las barras de herramientas de Visual FoxPro
		LOCAL i
		Dimension This.aToolBars[22,2]
		This.aToolBars[1,1] = TB_FORMDESIGNER_E
		This.aToolBars[2,1] = TB_STANDARD_E  
		This.aToolBars[3,1] = TB_LAYOUT_E
		This.aToolBars[4,1] = TB_QUERY_E
		This.aToolBars[5,1] = TB_VIEWDESIGNER_E
		This.aToolBars[6,1] = TB_COLORPALETTE_E  
		This.aToolBars[7,1] = TB_FORMCONTROLS_E
		This.aToolBars[8,1] = TB_DATADESIGNER_E
		This.aToolBars[9,1] = TB_REPODESIGNER_E
		This.aToolBars[10,1] = TB_REPOCONTROLS_E
		This.aToolBars[11,1] = TB_PRINTPREVIEW_E
		This.aToolBars[12,1] = TB_FORMDESIGNER_I
		This.aToolBars[13,1] = TB_STANDARD_I  
		This.aToolBars[14,1] = TB_LAYOUT_I
		This.aToolBars[15,1] = TB_QUERY_I
		This.aToolBars[16,1] = TB_VIEWDESIGNER_I
		This.aToolBars[17,1] = TB_COLORPALETTE_I  
		This.aToolBars[18,1] = TB_FORMCONTROLS_I
		This.aToolBars[19,1] = TB_DATADESIGNER_I
		This.aToolBars[20,1] = TB_REPODESIGNER_I
		This.aToolBars[21,1] = TB_REPOCONTROLS_I
		This.aToolBars[22,1] = TB_PRINTPREVIEW_I
		
		For i = 1 To Alen(This.aToolBars, 1)
		  This.aToolBars[i,2] = WVISIBLE(This.aToolBars[i,1])
		  IF This.aToolBars[i,2]
		    Hide Window (This.aToolBars[i,1])
		  EndIf
		EndFor
		
		*-- Asegurarse de que el Administrador de proyectos está cerrado; de lo contrario
		*-- podemos tener conflictos al intentar usar KEYBOARD para una tecla de acceso
		If Wexist("Project Manager") Or Wexist("Administrador de proyectos") 
			Deactivate Window "Project Manager"
			Deactivate Window "Administrador de proyectos"
		EndIf
		
	ENDPROC

	PROCEDURE terminar
		if type("_Screen.ActiveForm")="O"
			MessageBox("No puede Terminar la Aplicacion si hay alguna ventana abierta",64,_Screen.Caption)
		else
			clear events
		endif
		
	ENDPROC

ENDDEFINE

DEFINE CLASS barra AS toolbar 
 	*< CLASSDATA: Baseclass="toolbar" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdPrimero" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAnterior" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdProximo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUltimo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNuevo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdita" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBorra" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGraba" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDescarta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBuscar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrevia" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdImprime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExporta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCierra" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: guardabarras
		*m: recuperabarras
		*a: abarrasfox[1,2]
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Barra de Herramientas"
		ControlBox = .F.
		Height = 31
		Left = 0
		Name = "barra"
		Top = 0
		Width = 343
	*</PropValue>

	ADD OBJECT 'cmdAnterior' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 27, ;
		Name = "cmdAnterior", ;
		Picture = imagenes\anterior.bmp, ;
		ToolTipText = "Anterior", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdBorra' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 143, ;
		Name = "cmdBorra", ;
		Picture = imagenes\borrar.bmp, ;
		ToolTipText = "Borrar", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdBuscar' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 221, ;
		Name = "cmdBuscar", ;
		Picture = imagenes\buscar.bmp, ;
		ToolTipText = "Buscar {Ctrl+B}", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdCierra' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 315, ;
		Name = "cmdCierra", ;
		Picture = imagenes\cerrar.bmp, ;
		ToolTipText = "Salir", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdDescarta' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 193, ;
		Name = "cmdDescarta", ;
		Picture = imagenes\deshacer.bmp, ;
		ToolTipText = "Descartar", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEdita' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 121, ;
		Name = "cmdEdita", ;
		Picture = imagenes\editar.bmp, ;
		ToolTipText = "Modificar", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExporta' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 287, ;
		Name = "cmdExporta", ;
		Picture = imagenes\exportar.bmp, ;
		ToolTipText = "Exportar", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdGraba' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 171, ;
		Name = "cmdGraba", ;
		Picture = imagenes\grabar.bmp, ;
		ToolTipText = "Grabar {Ctrl+G}", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdImprime' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 265, ;
		Name = "cmdImprime", ;
		Picture = imagenes\imprimir.bmp, ;
		ToolTipText = "Imprimir", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdNuevo' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 99, ;
		Name = "cmdNuevo", ;
		Picture = imagenes\nuevo.bmp, ;
		ToolTipText = "Nuevo {Ctrl+N}", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrevia' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 243, ;
		Name = "cmdPrevia", ;
		Picture = imagenes\previa.bmp, ;
		ToolTipText = "Vista Previa", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrimero' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 5, ;
		Name = "cmdPrimero", ;
		Picture = imagenes\primero.bmp, ;
		ToolTipText = "Primero", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdProximo' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 49, ;
		Name = "cmdProximo", ;
		Picture = imagenes\proximo.bmp, ;
		ToolTipText = "Proximo", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdUltimo' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 71, ;
		Name = "cmdUltimo", ;
		Picture = imagenes\ultimo.bmp, ;
		ToolTipText = "Ultimo", ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Separator1' AS separator WITH ;
		Height = 0, ;
		Left = 99, ;
		Name = "Separator1", ;
		Top = 5, ;
		Width = 0
		*< END OBJECT: BaseClass="separator" />

	ADD OBJECT 'Separator2' AS separator WITH ;
		Height = 0, ;
		Left = 171, ;
		Name = "Separator2", ;
		Top = 5, ;
		Width = 0
		*< END OBJECT: BaseClass="separator" />

	ADD OBJECT 'Separator3' AS separator WITH ;
		Height = 0, ;
		Left = 221, ;
		Name = "Separator3", ;
		Top = 5, ;
		Width = 0
		*< END OBJECT: BaseClass="separator" />

	ADD OBJECT 'Separator5' AS separator WITH ;
		Height = 0, ;
		Left = 315, ;
		Name = "Separator5", ;
		Top = 5, ;
		Width = 0
		*< END OBJECT: BaseClass="separator" />
	
	PROCEDURE Activate
		lParameters pActivar
		pActivar = iif(type("pActivar")="L",pActivar,.f.)
		if type("_Screen.ActiveForm")="O" and _Screen.ActiveForm.class == "Pform"
			if pActivar and _Screen.ActiveForm.ConBarra
				if _Screen.Activeform.datasession = 2
					set datasession to _Screen.ActiveForm.datasessionid
				endif
				if !empty(alias())
					this.cmdPrimero.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdAnterior.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdProximo.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdUltimo.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdNuevo.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteNuevo
					this.cmdEdita.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteEdita
					this.cmdBorra.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteBorra
					this.cmdGraba.Enabled = _Screen.ActiveForm.ModoEdita
					this.cmdDescarta.Enabled = _Screen.ActiveForm.ModoEdita
					this.cmdPrevia.Enabled = !empty(_Screen.ActiveForm.Reporte) and !_Screen.ActiveForm.ModoEdita
					this.cmdImprime.Enabled = !empty(_Screen.ActiveForm.Reporte) and !_Screen.ActiveForm.ModoEdita
					this.cmdExporta.Enabled = !empty(_Screen.ActiveForm.BaseExportar) and !_Screen.ActiveForm.ModoEdita
					this.cmdCierra.Enabled = !_Screen.ActiveForm.ModoEdita
				else
					this.cmdCierra.Enabled = .t.
				endif
			else
				this.cmdPrimero.Enabled = .f.
				this.cmdAnterior.Enabled = .f.
				this.cmdProximo.Enabled = .f.
				this.cmdUltimo.Enabled = .f.
				this.cmdNuevo.Enabled = .f.
				this.cmdEdita.Enabled = .f.
				this.cmdBorra.Enabled = .f.
				this.cmdGraba.Enabled = .f.
				this.cmdDescarta.Enabled = .f.
				this.cmdPrevia.Enabled = .f.
				this.cmdImprime.Enabled = .f.
				this.cmdExporta.Enabled = .f.
				this.cmdCierra.Enabled = .f.
			endif
		else
			this.cmdPrimero.Enabled = .f.
			this.cmdAnterior.Enabled = .f.
			this.cmdProximo.Enabled = .f.
			this.cmdUltimo.Enabled = .f.
			this.cmdNuevo.Enabled = .f.
			this.cmdEdita.Enabled = .f.
			this.cmdBorra.Enabled = .f.
			this.cmdGraba.Enabled = .f.
			this.cmdDescarta.Enabled = .f.
			this.cmdPrevia.Enabled = .f.
			this.cmdImprime.Enabled = .f.
			this.cmdExporta.Enabled = .f.
			this.cmdCierra.Enabled = .f.
		endif
		
		
	ENDPROC

	PROCEDURE Deactivate
		this.SetAll("Enabled",.f.)
		
	ENDPROC

	PROCEDURE Destroy
		this.visible = .f.
		this.dock(-1)
		this.RecuperaBarras
		
	ENDPROC

	PROCEDURE guardabarras
		for indice = 1 to aLen(this.aBarrasFox,1)
			this.aBarrasFox[indice,2] = wvisible(this.aBarrasFox[indice,1])
			if this.aBarrasFox[indice,2]
				hide window (this.aBarrasFox[indice,1])
			endif
		endfor
		
	ENDPROC

	PROCEDURE Init
		lParameters cRutaGraficos
		this.dock(0)
		dimension this.aBarrasFox[11,2]
		this.aBarrasFox[1,1]="Controles de Formularios"
		this.aBarrasFox[2,1]="Controles de Informes"
		this.aBarrasFox[3,1]="Distribución"
		this.aBarrasFox[4,1]="Estándar"
		this.aBarrasFox[5,1]="Diseñador de bases de datos"
		this.aBarrasFox[6,1]="Diseñador de consultas"
		this.aBarrasFox[7,1]="Diseñador de formularios"
		this.aBarrasFox[8,1]="Diseñador de informes"
		this.aBarrasFox[9,1]="Diseñador de vistas"
		this.aBarrasFox[10,1]="Paleta de colores"
		this.aBarrasFox[11,1]="Vista Preliminar"
		this.GuardaBarras
		this.visible = .t.
		if type("cRutaGraficos")="C" and !empty(cRutaGraficos) and file(cRutaGraficos+"nul")
			local nIndice, cArchivo
			for nIndice = 1 to this.ControlCount
				if this.controls[nIndice].BaseClass = "Commandbutton"
					if rat("\",this.controls[nIndice].Picture)>0
						cArchivo = substr(this.controls[nIndice].Picture,rat("\",this.controls[nIndice].Picture)+1)
						if file(cRutaGraficos+cArchivo)
							this.controls[nIndice].Picture = cRutaGraficos + cArchivo
						endif
					endif
				endif
			endfor
		endif
		
	ENDPROC

	PROCEDURE recuperabarras
		for indice = 1 to aLen(this.aBarrasFox,1)
			if this.aBarrasFox[indice,2]
				show window (this.aBarrasFox[indice,1])
			endif
		endfor
		
	ENDPROC

	PROCEDURE Refresh
		if type("_Screen.ActiveForm")="O"
			if _Screen.ActiveForm.ConBarra
				if _Screen.Activeform.datasession = 2
					set datasession to _Screen.ActiveForm.datasessionid
				endif
				if !empty(alias())
					this.cmdPrimero.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdAnterior.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdProximo.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdUltimo.Enabled = !_Screen.ActiveForm.ModoEdita
					this.cmdNuevo.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteNuevo
					this.cmdEdita.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteEdita
					this.cmdBorra.Enabled = !_Screen.ActiveForm.ModoEdita and _Screen.ActiveForm.PermiteBorra
					this.cmdGraba.Enabled = _Screen.ActiveForm.ModoEdita
					this.cmdDescarta.Enabled = _Screen.ActiveForm.ModoEdita
					this.cmdBuscar.Enabled = .t.
					this.cmdPrevia.Enabled = !empty(_Screen.ActiveForm.Reporte) and !_Screen.ActiveForm.ModoEdita
					this.cmdImprime.Enabled = !empty(_Screen.ActiveForm.Reporte) and !_Screen.ActiveForm.ModoEdita
					this.cmdExporta.Enabled = !empty(_Screen.ActiveForm.BaseExportar) and !_Screen.ActiveForm.ModoEdita
					this.cmdCierra.Enabled = !_Screen.ActiveForm.ModoEdita
				else
					this.cmdCierra.Enabled = .t.
				endif
			else
				this.cmdPrimero.Enabled = .f.
				this.cmdAnterior.Enabled = .f.
				this.cmdProximo.Enabled = .f.
				this.cmdUltimo.Enabled = .f.
				this.cmdNuevo.Enabled = .f.
				this.cmdEdita.Enabled = .f.
				this.cmdBorra.Enabled = .f.
				this.cmdGraba.Enabled = .f.
				this.cmdDescarta.Enabled = .f.
				this.cmdBuscar.Enabled = .f.
				this.cmdPrevia.Enabled = .f.
				this.cmdImprime.Enabled = .f.
				this.cmdExporta.Enabled = .f.
				this.cmdCierra.Enabled = .f.
			endif
		else
			this.cmdPrimero.Enabled = .f.
			this.cmdAnterior.Enabled = .f.
			this.cmdProximo.Enabled = .f.
			this.cmdUltimo.Enabled = .f.
			this.cmdNuevo.Enabled = .f.
			this.cmdEdita.Enabled = .f.
			this.cmdBorra.Enabled = .f.
			this.cmdGraba.Enabled = .f.
			this.cmdDescarta.Enabled = .f.
			this.cmdBuscar.Enabled = .f.
			this.cmdPrevia.Enabled = .f.
			this.cmdImprime.Enabled = .f.
			this.cmdExporta.Enabled = .f.
			this.cmdCierra.Enabled = .f.
		endif
		
		if this.cmdNuevo.Enabled
			on key label Ctrl+N _Screen.ActiveForm.Nuevo
		else
			on key label Ctrl+N
		endif
		
		if this.cmdGraba.Enabled
			on key label Ctrl+G _Screen.ActiveForm.Grabar
		else
			on key label Ctrl+G
		endif
		
		if this.cmdBuscar.Enabled
			on key label Ctrl+B _Screen.ActiveForm.Buscar
		else
			on key label Ctrl+B
		endif
		
		
	ENDPROC

	PROCEDURE cmdAnterior.Click
		_Screen.ActiveForm.Anterior
		
	ENDPROC

	PROCEDURE cmdBorra.Click
		_Screen.ActiveForm.Borrar
		
	ENDPROC

	PROCEDURE cmdBuscar.Click
		_Screen.ActiveForm.Buscar
		
	ENDPROC

	PROCEDURE cmdCierra.Click
		_Screen.ActiveForm.Cerrar
		
	ENDPROC

	PROCEDURE cmdDescarta.Click
		_Screen.ActiveForm.Descartar
		
	ENDPROC

	PROCEDURE cmdEdita.Click
		_Screen.ActiveForm.Editar
		
	ENDPROC

	PROCEDURE cmdExporta.Click
		_Screen.ActiveForm.Exportar
		
	ENDPROC

	PROCEDURE cmdGraba.Click
		_Screen.ActiveForm.Grabar
		
	ENDPROC

	PROCEDURE cmdImprime.Click
		_Screen.ActiveForm.Imprimir
		
	ENDPROC

	PROCEDURE cmdNuevo.Click
		_Screen.ActiveForm.Nuevo
	ENDPROC

	PROCEDURE cmdPrevia.Click
		_Screen.ActiveForm.VistaPrevia
		
	ENDPROC

	PROCEDURE cmdPrimero.Click
		_Screen.ActiveForm.Primero
		
	ENDPROC

	PROCEDURE cmdProximo.Click
		_Screen.ActiveForm.Proximo
		
	ENDPROC

	PROCEDURE cmdUltimo.Click
		_Screen.ActiveForm.Ultimo
		
	ENDPROC

ENDDEFINE

DEFINE CLASS pcontrol AS control 
 	*< CLASSDATA: Baseclass="control" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Name = "pcontrol"
	*</PropValue>

ENDDEFINE

DEFINE CLASS pcustom AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Name = "pcustom"
	*</PropValue>

ENDDEFINE

DEFINE CLASS pform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "foxpro.h"
	*<DefinedPropArrayMethod>
		*m: anterior
		*m: borrar
		*m: buscar
		*m: cerrar
		*m: databasesave
		*m: descartar
		*m: editar
		*m: exportar
		*m: grabacambios
		*m: grabar
		*m: imprimir
		*m: indexseek		&& Verifica la existencia de una clave. Necesita en orden la clave, base y el orden.
		*m: nuevo
		*m: primero
		*m: proximo
		*m: recordsave
		*m: seteos
		*m: ultimo
		*m: usebuffer		&& Abre una base con buffering. Los parametros son [nombreTabla], [TipoBuffer], [ModoAcceso], [alias]. Solo el primero es obligatorio.
		*m: vistaprevia
		*p: baseexportar
		*p: baseprincipal
		*p: conbarra
		*p: modoborra
		*p: modoedita
		*p: modonuevo
		*p: oaplicacion
		*p: obusqueda
		*p: permiteborra
		*p: permiteedita
		*p: permitenuevo
		*p: puntero
		*p: reporte
	*</DefinedPropArrayMethod>

	*<PropValue>
		baseexportar = 
		baseprincipal = 
		Caption = "Formulario"
		DataSession = 2
		DoCreate = .T.
		Height = 262
		Icon = ..\mutual\
		Left = 0
		Name = "pform"
		oaplicacion = 
		obusqueda = 
		puntero = 0
		Top = 0
		Width = 375
	*</PropValue>
	
	PROCEDURE Activate
		if type("this.oAplicacion") = "O"
			this.oAplicacion.oBarra.Activate(this.ConBarra)
		endif
		
	ENDPROC

	PROCEDURE anterior
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if this.GrabaCambios()
				if !bof()
					skip -1
				endif
			endif
		endif
		thisform.refresh
		
	ENDPROC

	PROCEDURE borrar
	ENDPROC

	PROCEDURE buscar
		local oBusqueda, oControl, lValor
		oControl = thisform.ActiveControl
		lValor = .f.
		if thisform.ModoEdita and type("oControl") = "O" and oControl.BaseClass = "Text"
			do case
			case inlist(oControl.ControlSource,"prfaco.cod_pract","prfapp.cod_pract","prfaid.cod_pract")
				oBusqueda = createObject("buscaPractica")
				oBusqueda.Show
				lValor = oBusqueda.Codigo
				oBusqueda.release
				if !isnull(lvalor) .and. !empty(lValor)
					oControl.Value = lValor
					thisform.refresh
				endif
			case inlist(oControl.ControlSource,"prfaco.afi_clave","prfapp.afi_clave","prfain.afi_clave")
				oBusqueda = createObject("buscaAfiliado")
				oBusqueda.Show
				lValor = oBusqueda.carnet
				if !isnull(lvalor) .and. !empty(lValor)
					do case
					case left(oControl.ControlSource,7)="prfaco."
						replace prfaco.afi_clave with oBusqueda.Carnet, ;
							prfaco.afi_os with oBusqueda.Convenio, ;
							prfaco.afi_nombre with oBusqueda.Nombre, ;
							prfaco.afi_plan with oBusqueda.Plan + " / " +oBusqueda.Programa
					case left(oControl.ControlSource,7)="prfapp."
						replace prfapp.afi_clave with oBusqueda.Carnet, ;
							prfapp.afi_os with oBusqueda.Convenio, ;
							prfapp.afi_nombre with oBusqueda.Nombre, ;
							prfapp.afi_plan with oBusqueda.Plan + " / " +oBusqueda.Programa
					case left(oControl.ControlSource,7)="prfain."
						replace prfain.afi_clave with oBusqueda.Carnet, ;
							prfain.afi_os with oBusqueda.Convenio, ;
							prfain.afi_nombre with oBusqueda.Nombre, ;
							prfain.afi_plan with oBusqueda.Plan + " / " +oBusqueda.Programa
					case left(oControl.ControlSource,7)="prfare."
						replace prfare.afi_clave with oBusqueda.Carnet, ;
							prfare.afi_os with oBusqueda.Convenio, ;
							prfare.afi_nombre with oBusqueda.Nombre, ;
							prfare.afi_plan with oBusqueda.Plan + " / " +oBusqueda.Programa
					endcase
					thisform.refresh
				endif
				oBusqueda.release
			case inlist(oControl.ControlSource,"prfact.nro_prest","prliqp.nro_prest")
				oBusqueda = createObject("buscaPrestador")
				oBusqueda.Show
				lValor = oBusqueda.Codigo
				oBusqueda.release
				if !isnull(lvalor) .and. !empty(lValor)
					oControl.Value = lValor
					thisform.refresh
				endif
			case inlist(oControl.ControlSource,"prfaco.nro_efec_2","prfapp.nro_efec_2")
				oBusqueda = createObject("buscaMedico")
				oBusqueda.Show
				lValor = oBusqueda.Matricula
				if !isnull(lvalor) .and. !empty(lValor)
					do case
					case left(oControl.ControlSource,7)="prfaco."
						replace prfaco.nro_efec_1 with oBusqueda.tipo, ;
							prfaco.nro_efec_2 with oBusqueda.Matricula
					case left(oControl.ControlSource,7)="prfapp."
						replace prfapp.nro_efec_1 with oBusqueda.tipo, ;
							prfapp.nro_efec_2 with oBusqueda.Matricula
					endcase
					thisform.refresh
				endif
				oBusqueda.release
			endcase
		endif
		thisform.activate
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		
	ENDPROC

	PROCEDURE cerrar
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if this.GrabaCambios()
				thisform.release
			endif
		else
			thisform.release
		endif
		
	ENDPROC

	PROCEDURE databasesave
		lParameters lTodos, lForzar, cAlias
		lTodos = iif(type("lTodos")="L",lTodos,.f.)
		lForzar = iif(type("lForzar")="L",lForzar,.f.)
		cAlias = iif(type("cAlias")="C",cAlias,alias())
		local DataBaseSave
		DataBaseSave = TableUpdate(lTodos,lForzar,cAlias)
		return (DataBaseSave)
		
	ENDPROC

	PROCEDURE Deactivate
		if type("this.oAplicacion") = "O"
			this.oAplicacion.oBarra.Deactivate()
		endif
		
	ENDPROC

	PROCEDURE descartar
		if this.datasession = 2
			set datasession to this.datasessionid
		endif
		if !empty(alias())
			do case
			case CursorGetProp("Buffering")=3
				tablerevert()
		*!*			go top
				if this.ModoNuevo and between(this.Puntero,1,reccount())
					go (this.Puntero)
				endif
				this.Puntero = 0
				this.ModoNuevo = .f.
				this.ModoEdita = .f.
				this.Refresh
			case CursorGetProp("Buffering")=5
				tablerevert(.t.)
		*!*			go top
				if this.ModoNuevo and between(this.Puntero,1,reccount())
					go (this.Puntero)
				endif
				this.Puntero = 0
				this.ModoNuevo = .f.
				this.ModoEdita = .f.
				this.Refresh
			endcase
		endif
		
	ENDPROC

	PROCEDURE Destroy
		if type("this.oAplicacion") = "O"
			this.oAplicacion.oBarra.Deactivate()
		endif
		
	ENDPROC

	PROCEDURE editar
		if this.datasession = 2
			set datasession to this.datasessionid
		endif
		if !empty(alias())
			this.ModoEdita = .t.
			this.ModoNuevo = .f.
			this.refresh
		endif
		
	ENDPROC

	PROCEDURE exportar
		do form expBases with thisform.DataSessionID, thisform.BaseExportar
		
	ENDPROC

	PROCEDURE grabacambios
		if this.datasession = 2
			set datasession to this.datasessionid
		endif
		Local Respuesta
		Respuesta = .t.
		if !empty(alias())
			do case
			case CursorGetProp("Buffering")=DB_BUFOFF &&(1)
					Respuesta = thisform.Grabar()
			case CursorGetProp("Buffering")=DB_BUFLOCKRECORD &&(2)
				if GetFldState(-1) # replicate("1",fcount()+1) && GetFldState(0)#1
					local Decision
					Decision = MessageBox("Los datos han Cambiado. ¿Desea Grabar? ",MB_YESNOCANCEL+MB_ICONQUESTION)
					do case
					case Decision = IDCANCEL
						Respuesta = .f.
					case Decision = IDYES
						Respuesta = thisform.Grabar()
					case Decision = IDNO
						Respuesta = thisform.Descartar()
					endcase
				endif
			case CursorGetProp("Buffering")=DB_BUFOPTRECORD &&(3)
				if GetFldState(-1) # replicate("1",fcount()+1) && GetFldState(0)#1
					local Decision
					Decision = MessageBox("Los datos han Cambiado. ¿Desea Grabar? ",MB_YESNOCANCEL+MB_ICONQUESTION)
					do case
					case Decision = IDCANCEL
						Respuesta = .f.
					case Decision = IDYES
						Respuesta = thisform.Grabar()
					case Decision = IDNO
						Respuesta = thisform.Descartar()
					endcase
				endif
			case CursorGetProp("Buffering")=DB_BUFLOCKTABLE &&(4)
				if GetNextModified(0)#0
					local Decision
					Decision = MessageBox("Los datos han Cambiado. ¿Desea Grabar? ",MB_YESNOCANCEL+MB_ICONQUESTION)
					do case
					case Decision = IDCANCEL
						Respuesta = .f.
					case Decision = IDYES
						Respuesta = thisform.Grabar()
					case Decision = IDNO
						Respuesta = thisform.Descartar()
					endcase
				endif
			case CursorGetProp("Buffering")=DB_BUFOPTTABLE &&(5)
				if GetNextModified(0)#0
					local Decision
					Decision = MessageBox("Los datos han Cambiado. ¿Desea Grabar? ",MB_YESNOCANCEL+MB_ICONQUESTION)
					do case
					case Decision = IDCANCEL
						Respuesta = .f.
					case Decision = IDYES
						Respuesta = thisform.Grabar()
					case Decision = IDNO
						Respuesta = thisform.Descartar()
					endcase
				endif
			endcase
		endif
		return (Respuesta)
		
	ENDPROC

	PROCEDURE grabar
		if this.datasession = 2
			set datasession to (this.datasessionid)
		endif
		local Respuesta
		Respuesta = .f.
		if !empty(alias())
			do case
			case CursorGetProp("Buffering")=DB_BUFOFF &&(1)
				flush all
				this.ModoNuevo = .f.
				this.ModoEdita = .f.
				this.Refresh
				Respuesta = .t.
			case CursorGetProp("Buffering")=DB_BUFLOCKRECORD &&(2)
				if this.RecordSave()
					this.ModoNuevo = .f.
					this.ModoEdita = .f.
					this.Refresh
					Respuesta = .t.
				endif
			case CursorGetProp("Buffering")=DB_BUFOPTRECORD &&(3)
				if this.RecordSave()
					this.ModoNuevo = .f.
					this.ModoEdita = .f.
					this.Refresh
					Respuesta = .t.
				endif
			case CursorGetProp("Buffering")=DB_BUFLOCKTABLE &&(4)
				if this.DataBaseSave(.t.)
					this.ModoNuevo = .f.
					this.ModoEdita = .f.
					this.Refresh
					Respuesta = .t.
				endif
			case CursorGetProp("Buffering")=DB_BUFOPTTABLE &&(5)
				if this.DataBaseSave(.t.)
					this.ModoNuevo = .f.
					this.ModoEdita = .f.
					this.Refresh
					Respuesta = .t.
				endif
			endcase
		endif
		return (Respuesta)
		
	ENDPROC

	PROCEDURE imprimir
	ENDPROC

	PROCEDURE indexseek		&& Verifica la existencia de una clave. Necesita en orden la clave, base y el orden.
		lParameters cExpresion, cBase, cOrden
		Local lExiste
		use (cbase) again noupdate shared alias indexseek orde (cOrden) in 0
		lExiste = seek(cExpresion,"indexseek")
		use in indexseek
		return (lExiste)
		
	ENDPROC

	PROCEDURE Init
		local lObjeto
		for each lObjeto IN this.Controls
			if left(lObjeto.class,2) = "Db" and !empty(lObjeto.ControlSource)
				do case
				case lObjeto.esclave and lObjeto.eseditable and thisform.modoNuevo
					lObjeto.enabled = .t.
				case !lObjeto.esclave and lObjeto.eseditable and thisform.modoEdita
					lObjeto.enabled = .t.
				other
					lObjeto.enabled = .f.
				endcase
			endif
		next
		
	ENDPROC

	PROCEDURE Load
		if aInstance(vIns,"aplicacion")=1
			this.oAplicacion = evaluate(vIns[1])
		endif
		this.Seteos
		
	ENDPROC

	PROCEDURE nuevo
		if this.datasession = 2
			set datasession to this.datasessionid
		endif
		if !empty(alias())
			this.ModoEdita = .t.
			this.ModoNuevo = .t.
			this.Puntero = recno()
			append blank
			this.refresh
		endif
		
	ENDPROC

	PROCEDURE primero
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if this.GrabaCambios()
				go top
			endif
		endif
		thisform.refresh
		
	ENDPROC

	PROCEDURE proximo
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if this.GrabaCambios()
				if !eof()
					skip
					if eof()
						skip -1
					endif
				endif
			endif
		endif
		thisform.refresh
		
	ENDPROC

	PROCEDURE QueryUnload
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if !this.GrabaCambios()
				nodefault
			endif
		endif
		
	ENDPROC

	PROCEDURE recordsave
		lParameters lForzar, cAlias
		lForzar = iif(type("lForzar")="L",lForzar,.f.)
		cAlias = iif(type("cAlias")="C",cAlias,alias())
		local RecordSave
		RecordSave = TableUpdate(.f.,lForzar,cAlias)
		return (RecordSave)
		
	ENDPROC

	PROCEDURE Refresh
		if type("this.oAplicacion") = "O"
			this.oAplicacion.oBarra.Refresh()
			local lObjeto
			for each lObjeto IN this.Controls
				if left(lObjeto.class,2) = "Db" and !empty(lObjeto.ControlSource)
					do case
					case lObjeto.esclave and lObjeto.eseditable and thisform.modoNuevo
						lObjeto.enabled = .t.
					case !lObjeto.esclave and lObjeto.eseditable and thisform.modoEdita
						lObjeto.enabled = .t.
					other
						lObjeto.enabled = .f.
					endcase
				endif
			next
		endif
		
	ENDPROC

	PROCEDURE seteos
		*-- Sets del Sistema
		&&InsMode(.T.)
		*!*	CapsLock(.T.)
		&&NumLock(.T.)
		
		Set Century To 19 RollOver 90
		SET ENGINEBEHAVIOR 70
		Set Bell Off
		Set BrStatus Off
		Set Century On
		Set Clock Status
		Set Confirm Off
		Set CpDialog Off
		Set Date French
		Set Decimal To 2
		Set Deleted On
		Set Delimiters Off
		Set Escape Off
		Set Exact Off
		Set Exclusive Off
		Set Fixed On
		Set Hours To 24
		Set MemoWidth To 80
		Set MultiLocks On
		Set Notify Off
		Set Reprocess To 0
		Set Safety Off
		Set Scoreboard Off
		Set Status Off
		Set Status Bar Off
		Set Talk Off
		
		
	ENDPROC

	PROCEDURE ultimo
		if thisform.datasession = 2
			set datasession to thisform.datasessionid
		endif
		if !empty(alias())
			if this.GrabaCambios()
				go bottom
			endif
		endif
		thisform.refresh
		
	ENDPROC

	PROCEDURE Unload
		close data
		
	ENDPROC

	PROCEDURE usebuffer		&& Abre una base con buffering. Los parametros son [nombreTabla], [TipoBuffer], [ModoAcceso], [alias]. Solo el primero es obligatorio.
		* Abrir una base con buffering
		lParameters NombreDBF, TipoBuffer, ModoAcceso, AliasID
		if type("NombreDBF")#"C" or empty(NombreDBF)
			return
		endif
		ModoAcceso = iif(type("ModoAcceso")="N",ModoAcceso,DB_SHARED)
		TipoBuffer = iif(type("TipoBuffer")#"N" or !between(TipoBuffer,0,5),DB_BUFOPTRECORD,TipoBuffer)
		
		if set("MULTI")#"ON"
			set multilock ON
		endif
		Local Area_Save, Area_New
		Area_Save = Select()
		sele 0
		DO CASE
		CASE ModoAcceso = DB_SHARED
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) shared again
			else
				use (NombreDBF) shared again
			endif
		CASE ModoAcceso = DB_READONLY
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) shared noupdate again
			else
				use (NombreDBF) shared noupdate again
			endif
		CASE ModoAcceso = DB_EXCLUSIVE
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) exclusive again
			else
				use (NombreDBF) exclusive again
			endif
		ENDCASE
		Area_New = alias()
		CursorSetProp("Buffering",TipoBuffer)
		sele (Area_Save)
		return (Area_New)
		
	ENDPROC

	PROCEDURE vistaprevia
	ENDPROC

ENDDEFINE

DEFINE CLASS pformbusq AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: seteos
		*p: conbarra
		*p: modoborra
		*p: modoedita
		*p: modonuevo
		*p: oaplicacion
		*p: permiteborra
		*p: permiteedita
		*p: permitenuevo
	*</DefinedPropArrayMethod>

	*<PropValue>
		AlwaysOnTop = .T.
		AutoCenter = .T.
		Caption = "Busqueda"
		DataSession = 2
		DoCreate = .T.
		Name = "pformbusq"
		WindowType = 1
	*</PropValue>
	
	PROCEDURE Init
		IF aInstance(vIns,"aplicacion")=1
			this.oAplicacion = evaluate(vIns[1])
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		this.seteos
		
	ENDPROC

	PROCEDURE seteos
		Set Century To 19 RollOver 90
		Set Bell Off
		Set BrStatus Off
		Set Century On
		Set Clock Status
		Set Confirm Off
		Set CpDialog Off
		Set Date French
		Set Decimal To 2
		Set Deleted On
		Set Delimiters Off
		Set Escape Off
		Set Exact Off
		Set Exclusive Off
		Set Fixed On
		Set Hours To 24
		Set MemoWidth To 80
		Set MultiLocks On
		Set Notify Off
		Set Reprocess To 0
		Set Safety Off
		Set Scoreboard Off
		Set Status Off
		Set Status Bar Off
		Set Talk Off
		
	ENDPROC

ENDDEFINE

DEFINE CLASS pforminfo AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\forms\pform.h"
	*<DefinedPropArrayMethod>
		*m: buscar
		*m: cerrar
		*m: indexseek
		*m: seteos
		*m: usebuffer
		*p: conbarra
		*p: modoborra
		*p: modoedita
		*p: modonuevo
		*p: oaplicacion
		*p: permiteborra
		*p: permiteedita
		*p: permitenuevo
	*</DefinedPropArrayMethod>

	*<PropValue>
		AlwaysOnTop = .T.
		AutoCenter = .T.
		Caption = "Informacion"
		DataSession = 2
		DoCreate = .T.
		Name = "pforminfo"
		WindowType = 1
	*</PropValue>
	
	PROCEDURE buscar
	ENDPROC

	PROCEDURE cerrar
	ENDPROC

	PROCEDURE indexseek
		lParameters cExpresion, cBase, cOrden
		Local lExiste
		use (cbase) again noupdate shared alias indexseek orde (cOrden) in 0
		lExiste = seek(cExpresion,"indexseek")
		use in indexseek
		return (lExiste)
		
	ENDPROC

	PROCEDURE Load
		if aInstance(vIns,"aplicacion")=1
			this.oAplicacion = evaluate(vIns[1])
		endif
		this.Seteos
		
	ENDPROC

	PROCEDURE seteos
		*-- Sets del Sistema
		&&InsMode(.T.)
		*!*	CapsLock(.T.)
		&&NumLock(.T.)
		
		Set Century To 19 RollOver 90
		Set Bell Off
		Set BrStatus Off
		Set Century On
		Set Clock Status
		Set Confirm Off
		Set CpDialog Off
		Set Date French
		Set Decimal To 2
		Set Deleted On
		Set Delimiters Off
		Set Escape Off
		Set Exact Off
		Set Exclusive Off
		Set Fixed On
		Set Hours To 24
		Set MemoWidth To 80
		Set MultiLocks On
		Set Notify Off
		Set Reprocess To 0
		Set Safety Off
		Set Scoreboard Off
		Set Status Off
		Set Status Bar Off
		Set Talk Off
		
		
	ENDPROC

	PROCEDURE Unload
		close data
		
	ENDPROC

	PROCEDURE usebuffer
		* Abrir una base con buffering
		lParameters NombreDBF, TipoBuffer, ModoAcceso, AliasID
		if type("NombreDBF")#"C" or empty(NombreDBF)
			return
		endif
		ModoAcceso = iif(type("ModoAcceso")="N",ModoAcceso,DB_SHARED)
		TipoBuffer = iif(type("TipoBuffer")#"N" or !between(TipoBuffer,0,5),DB_BUFOPTRECORD,TipoBuffer)
		
		if set("MULTI")#"ON"
			set multilock ON
		endif
		Local Area_Save, Area_New
		Area_Save = Select()
		sele 0
		DO CASE
		CASE ModoAcceso = DB_SHARED
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) shared again
			else
				use (NombreDBF) shared again
			endif
		CASE ModoAcceso = DB_READONLY
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) shared noupdate again
			else
				use (NombreDBF) shared noupdate again
			endif
		CASE ModoAcceso = DB_EXCLUSIVE
			if type("AliasID")="C" and !empty(AliasID)
				use (NombreDBF) alias (AliasID) exclusive again
			else
				use (NombreDBF) exclusive again
			endif
		ENDCASE
		Area_New = alias()
		CursorSetProp("Buffering",TipoBuffer)
		sele (Area_Save)
		return (Area_New)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS pformset AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Form1" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "pformset"
	*</PropValue>

	ADD OBJECT 'Form1' AS form WITH ;
		Caption = "Form1", ;
		DoCreate = .T., ;
		Name = "Form1"
		*< END OBJECT: BaseClass="form" />

ENDDEFINE

DEFINE CLASS pformsist AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tmrSist" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: conbarra
		*p: modoborra
		*p: modoedita
		*p: modonuevo
		*p: oaplicacion
		*p: permiteborra
		*p: permiteedita
		*p: permitenuevo
	*</DefinedPropArrayMethod>

	*<PropValue>
		AlwaysOnTop = .T.
		AutoCenter = .T.
		Caption = "pFormSist"
		ControlBox = .F.
		DoCreate = .T.
		Height = 250
		Icon = imagenes\informacion.ico
		Name = "pformsist"
		oaplicacion = 
		Width = 375
		WindowType = 1
	*</PropValue>

	ADD OBJECT 'tmrSist' AS timer WITH ;
		Height = 25, ;
		Interval = 15000, ;
		Left = 0, ;
		Name = "tmrSist", ;
		Top = 0, ;
		Width = 25
		*< END OBJECT: BaseClass="timer" />
	
	PROCEDURE Init
		IF aInstance(vIns,"aplicacion")=1
			this.oAplicacion = evaluate(vIns[1])
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		LOCAL lNroIndice
		FOR lNroIndice = _Screen.FormCount to 1 step -1
			IF _Screen.Forms(lNroIndice).class = "Pformsist"
				NODEFAULT
			ENDIF
		NEXT lNroIndice
		
	ENDPROC

	PROCEDURE tmrSist.Timer
		thisform.refresh
		
	ENDPROC

ENDDEFINE

DEFINE CLASS temporizador AS timer 
 	*< CLASSDATA: Baseclass="timer" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "foxpro.h"
	*<DefinedPropArrayMethod>
		*m: cerrartablas
		*m: mostrarpantalla
		*m: quitarpantalla
		*p: clave_id
		*p: notificado
		*p: oaplicacion
	*</DefinedPropArrayMethod>

	*<PropValue>
		clave_id = 
		Height = 23
		Interval = 60000
		Name = "temporizador"
		notificado = 
		oaplicacion = 
		Width = 23
	*</PropValue>
	
	PROCEDURE cerrartablas
		LOCAL nIndice
		FOR nIndice = _Screen.FormCount to 1 step -1
			IF _Screen.Forms(nIndice).Class == "Pform"
				IF _Screen.Forms(nIndice).datasession = 2
					SET datasession to _Screen.Forms(nIndice).datasessionid
				ENDIF
				IF !empty(alias())
					DO case
					CASE CursorGetProp("Buffering")=DB_BUFOFF &&(1)
						_SCREEN.Forms(nIndice).Descartar()
					CASE CursorGetProp("Buffering")=DB_BUFLOCKRECORD &&(2)
						IF GetFldState(-1) # replicate("1",fcount()+1) && GetFldState(0)#1
							_SCREEN.Forms(nIndice).Descartar()
						ENDIF
					CASE CursorGetProp("Buffering")=DB_BUFOPTRECORD &&(3)
						IF GetFldState(-1) # replicate("1",fcount()+1) && GetFldState(0)#1
							_SCREEN.Forms(nIndice).Descartar()
						ENDIF
					CASE CursorGetProp("Buffering")=DB_BUFLOCKTABLE &&(4)
						IF GetNextModified(0)#0
							_SCREEN.Forms(nIndice).Descartar()
						ENDIF
					CASE CursorGetProp("Buffering")=DB_BUFOPTTABLE &&(5)
						IF GetNextModified(0)#0
							_SCREEN.Forms(nIndice).Descartar()
						ENDIF
					ENDCASE
				ENDIF
				_SCREEN.Forms(nIndice).release
			ENDIF
		NEXT nIndice
		RETURN
		
	ENDPROC

	PROCEDURE Destroy
		if !empty(this.Clave_ID)
			use puestos orde clave_id shared
			if seek(this.Clave_ID)
				replace activo with .f., ;
						disponible with .t.
				delete
			endif
			use
		endif
		
	ENDPROC

	PROCEDURE Init
		this.notificado = ""
		this.clave_id = ""
		
	ENDPROC

	PROCEDURE mostrarpantalla
		LOCAL formPresente, nIndice
		formPresente = .f.
		FOR nIndice = 1 to _Screen.FormCount
			IF _Screen.Forms(nIndice).class = "Pformsist"
				formPresente = .t.
			ENDIF
		NEXT nIndice
		IF !formPresente
			_Screen.WindowState = 0
			DO form SistInfo
		ENDIF
		
	ENDPROC

	PROCEDURE quitarpantalla
		LOCAL formPresente, nIndice
		formPresente = .f.
		FOR nIndice = 1 to _Screen.FormCount
			IF _Screen.Forms(nIndice).class = "Pformsist"
				_Screen.Forms(nIndice).release
			ENDIF
		NEXT nIndice
		
	ENDPROC

	PROCEDURE Timer
		LOCAL lInformarSuceso, lCerrarSistema
		LOCAL lAplicacion, lUsuario, lPuesto, lPrograma, lNroIndice
		IF aInstance(vIns,"aplicacion")=1
			lAplicacion = evaluate(vIns[1])
			lUsuario = lAplicacion.cNomUsuario
			lPuesto = lAplicacion.cNomPuesto
			lPrograma = lAplicacion.AplicacionID
		ELSE
			lUsuario = ""
			lPuesto = ""
			lPrograma = ""
		ENDIF
		IF used("mensaje")
			RETURN
		ENDIF
		USE mensaje noupdate shared again
		lInformarSuceso = activo
		lCerrarSistema = .f.
		USE
		IF lInformarSuceso
			IF empty(this.Clave_ID)
				this.notificado = time()
				USE puestos orde Clave_ID shared again
				APPE blan
				this.Clave_ID = sound(lUsuario)+sound(lPuesto)+padl(recno(),4,"0")
				REPLACE Clave_ID with this.Clave_ID, ;
					usuario with lUsuario, ;
					puesto with lPuesto, ;
					aplicacion with lPrograma, ;
					dia with date(), ;
					hora with time(), ;
					activo with .t.
				USE
				this.MostrarPantalla
			ELSE
				USE puestos orde Clave_ID shared noupdate again
				IF seek(this.Clave_ID)
					lCerrarSistema = cerrar
				ENDIF
				USE
				IF lCerrarSistema && hFin - hIni > 5
					this.CerrarTablas()
					USE puestos orde Clave_ID shared again
					IF seek(this.Clave_ID)
						REPLACE activo with .f.
					ENDIF
					DELETE
					USE
					this.QuitarPantalla
					ON shutdown
					Clear events
				ELSE
					this.MostrarPantalla
				ENDIF
			ENDIF
		ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS usuario AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: nombrepuesto
		*m: nombreusuario
		*p: cnompuesto
		*p: cnomusuario
		*p: empresainicial
		*p: nivelauditoria
		*p: nivelcobranza
		*p: nivelcontabilidad
		*p: nivelempresa
		*p: nivelestadistica
		*p: nivelfacturacion
		*p: nivelfarmacia
		*p: nivelpadron
		*p: nivelpagos
		*p: nivelprestacion
		*p: nivelrecepcion
		*p: nivelsistemas
		*p: permiso
		*p: usuarioid
	*</DefinedPropArrayMethod>

	*<PropValue>
		cnompuesto = ""
		cnomusuario = ""
		empresainicial = 
		Name = "usuario"
		nivelauditoria = 0
		nivelcobranza = 0
		nivelcontabilidad = 0
		nivelempresa = 0
		nivelestadistica = 0
		nivelfacturacion = 0
		nivelfarmacia = 0
		nivelpadron = 0
		nivelpagos = 0
		nivelprestacion = 0
		nivelrecepcion = 0
		nivelsistemas = 0
		usuarioid = 0
	*</PropValue>
	
	PROCEDURE Init
		this.cNomPuesto = upper(this.NombrePuesto())
		this.cNomUsuario = upper(this.NombreUsuario())
		use usuarios orde nombre shared noupdate in 0
		if seek(upper(this.cNomUsuario),"usuarios")
			this.UsuarioID = usuarios.documento
			this.Permiso = usuarios.permiso
		endif
		use in usuarios
		
		
	ENDPROC

	PROCEDURE nombrepuesto
		*---------------------------------
		* FUNCTION NombrePuesto()
		*---------------------------------
		* Retorna el nombre de la computadora
		* USO: ? NombrePuesto() -> "PC_DESARROLLO"
		*---------------------------------
		LOCAL lcComputer, lnSize
		lcComputer = SPACE(80)
		lnSize = 80
		DECLARE INTEGER GetComputerName IN WIN32API ;
			STRING @cComputerName, ;
			INTEGER @nSize
		=GetComputername(@lcComputer, @lnSize)
		IF lnSize < 2
			lcComputer = ""
		ELSE
			lcComputer = SUBSTR(lcComputer, 1, lnSize)
		ENDIF
		this.cNomPuesto = lcComputer
		RETURN lcComputer
		
	ENDPROC

	PROCEDURE nombreusuario
		*---------------------------------
		* FUNCTION NombreUsuario()
		*---------------------------------
		* Retorna el nombre del usuario
		* USO: ? NombreUsuario() -> "JUAN"
		*---------------------------------
		LOCAL lcUser, lnSize
		lcUser = SPACE(80)
		lnSize = 80
		DECLARE INTEGER GetUserName IN WIN32API ;
			STRING @cUserName, ;
			INTEGER @nSize
		=GetUserName(@lcUser, @lnSize)
		IF lnSize < 2
			lcUser = ""
		ELSE
			lcUser = SUBSTR(lcUser, 1, lnSize-1)
		ENDIF
		this.cNomusuario = lcUser
		RETURN lcUser
		
	ENDPROC

ENDDEFINE
